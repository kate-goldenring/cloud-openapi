{
  "openapi": "3.0.1",
  "info": {
    "title": "Fermyon.Cloud.Web",
    "version": "1.0"
  },
  "paths": {
    "/api/accounts/{id}": {
      "delete": {
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/apps": {
      "get": {
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Name"
            }
          },
          {
            "name": "IsSortedAscending",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppItemPage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppItemPage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppItemPage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps/{id}": {
      "get": {
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/apps/{id}/request-count": {
      "get": {
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppRequestCount"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppRequestCount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppRequestCount"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-tokens": {
      "post": {
        "tags": [
          "auth-tokens"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-tokens/refresh": {
      "post": {
        "tags": [
          "auth-tokens"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/channels": {
      "get": {
        "tags": [
          "channels"
        ],
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Name"
            }
          },
          {
            "name": "IsSortedAscending",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelItemPage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelItemPage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelItemPage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "channels"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChannelCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChannelCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChannelCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChannelCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/api/channels/{id}": {
      "get": {
        "tags": [
          "channels"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "channels"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChannelCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChannelCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChannelCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChannelCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "channels"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchChannelCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchChannelCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchChannelCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchChannelCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "channels"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/channels/{channelId}/desired-status": {
      "put": {
        "tags": [
          "channels"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesiredStatusCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesiredStatusCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesiredStatusCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesiredStatusCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/channels/{id}/logs": {
      "get": {
        "tags": [
          "channels"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetChannelLogsVm"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChannelLogsVm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChannelLogsVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/channels/{id}/healthz": {
      "get": {
        "tags": [
          "channels"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/device-codes": {
      "post": {
        "tags": [
          "device-codes"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCodeCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCodeCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCodeCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCodeCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCodeItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCodeItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCodeItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/device-codes/{userCode}": {
      "get": {
        "tags": [
          "device-codes"
        ],
        "parameters": [
          {
            "name": "userCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCodeDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCodeDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCodeDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/device-codes/activate": {
      "post": {
        "tags": [
          "device-codes"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateDeviceCodeCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateDeviceCodeCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateDeviceCodeCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateDeviceCodeCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/key-value-pairs": {
      "post": {
        "tags": [
          "key-value-pairs"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyValuePairCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyValuePairCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyValuePairCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyValuePairCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2": {
      "get": {
        "tags": [
          "oci"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/{name}/manifests/{reference}": {
      "head": {
        "tags": [
          "oci"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "oci"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/{name}/blobs/uploads": {
      "post": {
        "tags": [
          "oci"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/{name}/blobs/uploads/{digest}": {
      "get": {
        "tags": [
          "oci"
        ],
        "parameters": [
          {
            "name": "digest",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "oci"
        ],
        "parameters": [
          {
            "name": "digest",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "oci"
        ],
        "parameters": [
          {
            "name": "digest",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "oci"
        ],
        "parameters": [
          {
            "name": "digest",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/personal-access-tokens": {
      "post": {
        "tags": [
          "personal-access-tokens"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonalAccessTokenCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonalAccessTokenCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonalAccessTokenCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonalAccessTokenCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessTokenValue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessTokenValue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessTokenValue"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "personal-access-tokens"
        ],
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "CreatedAt"
            }
          },
          {
            "name": "isSortedAscending",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessTokenItemPage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessTokenItemPage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessTokenItemPage"
                }
              }
            }
          }
        }
      }
    },
    "/api/personal-access-tokens/{id}": {
      "delete": {
        "tags": [
          "personal-access-tokens"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/registry/_i": {
      "post": {
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/registry/_i/{bindleName}": {
      "get": {
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "bindleName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "bindleName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/revisions": {
      "get": {
        "tags": [
          "revisions"
        ],
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RevisionItemPage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevisionItemPage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevisionItemPage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "revisions"
        ],
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRevisionCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRevisionCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRevisionCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRevisionCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/storages": {
      "get": {
        "tags": [
          "storages"
        ],
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "IsSortedAscending",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringPage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringPage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringPage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountProvider": {
        "enum": [
          "GitHub",
          "DeviceFlow"
        ],
        "type": "string"
      },
      "ActivateDeviceCodeCommand": {
        "required": [
          "userCode"
        ],
        "type": "object",
        "properties": {
          "userCode": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AppChannelListItem": {
        "required": [
          "created",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "activeRevisionNumber": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "healthStatus": {
            "$ref": "#/components/schemas/HealthStatus"
          }
        },
        "additionalProperties": false
      },
      "AppItem": {
        "required": [
          "channels",
          "id",
          "name",
          "storageId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "storageId": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppChannelListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "AppItemPage": {
        "required": [
          "isLastPage",
          "items",
          "pageIndex",
          "pageSize",
          "totalItems"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppItem"
            }
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AppRequestCount": {
        "required": [
          "averagePerSecond",
          "end",
          "interval",
          "points",
          "start",
          "total"
        ],
        "type": "object",
        "properties": {
          "start": {
            "type": "integer",
            "format": "int64"
          },
          "end": {
            "type": "integer",
            "format": "int64"
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "averagePerSecond": {
            "type": "number",
            "format": "double"
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppRequestPoint"
            }
          }
        },
        "additionalProperties": false
      },
      "AppRequestPoint": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AppSummaryDto": {
        "required": [
          "channels",
          "id",
          "name",
          "storageId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "storageId": {
            "minLength": 1,
            "type": "string"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppChannelListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "readOnly": true
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "readOnly": true
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "readOnly": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "readOnly": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "escapedCodeBase": {
            "type": "string",
            "readOnly": true,
            "deprecated": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/Module"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            },
            "readOnly": true
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/SecurityRuleSet"
          }
        },
        "additionalProperties": false
      },
      "CallingConventions": {
        "enum": [
          "Standard",
          "VarArgs",
          "Any",
          "HasThis",
          "ExplicitThis"
        ],
        "type": "string"
      },
      "ChannelItem": {
        "required": [
          "appId",
          "desiredStatus",
          "domain",
          "environmentVariables",
          "id",
          "name",
          "revisionSelectionStrategy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "appId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "domain": {
            "minLength": 1,
            "type": "string"
          },
          "revisionSelectionStrategy": {
            "$ref": "#/components/schemas/ChannelRevisionSelectionStrategy"
          },
          "desiredStatus": {
            "minLength": 1,
            "type": "string"
          },
          "activeRevision": {
            "$ref": "#/components/schemas/RevisionItem"
          },
          "lastPublishAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rangeRule": {
            "type": "string",
            "nullable": true
          },
          "environmentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariableItem"
            }
          },
          "appSummary": {
            "$ref": "#/components/schemas/AppSummaryDto"
          }
        },
        "additionalProperties": false
      },
      "ChannelItemPage": {
        "required": [
          "isLastPage",
          "items",
          "pageIndex",
          "pageSize",
          "totalItems"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChannelItem"
            }
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ChannelRevisionSelectionStrategy": {
        "enum": [
          "UseRangeRule",
          "UseSpecifiedRevision"
        ],
        "type": "string"
      },
      "ChannelRevisionSelectionStrategyField": {
        "type": "string",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/ChannelRevisionSelectionStrategy"
          }
        },
        "additionalProperties": false
      },
      "ConstructorInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          }
        },
        "additionalProperties": false
      },
      "CreateAppCommand": {
        "required": [
          "name",
          "storageId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "storageId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateChannelCommand": {
        "required": [
          "appId",
          "name",
          "revisionSelectionStrategy"
        ],
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "revisionSelectionStrategy": {
            "$ref": "#/components/schemas/ChannelRevisionSelectionStrategy"
          },
          "rangeRule": {
            "type": "string",
            "nullable": true
          },
          "activeRevisionId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateDeviceCodeCommand": {
        "required": [
          "clientId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CreateKeyValuePairCommand": {
        "required": [
          "appId",
          "key",
          "storeName",
          "value"
        ],
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "format": "uuid"
          },
          "storeName": {
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreatePersonalAccessTokenCommand": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateTokenCommand": {
        "type": "object",
        "properties": {
          "providerCode": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/AccountProvider"
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            },
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeNamedArgument"
            },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "readOnly": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/Type"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DesiredStatus": {
        "enum": [
          "Running",
          "Dead"
        ],
        "type": "string"
      },
      "DeviceCodeDetails": {
        "type": "object",
        "properties": {
          "clientName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DeviceCodeItem": {
        "required": [
          "deviceCode",
          "expiresIn",
          "interval",
          "userCode",
          "verificationUrl"
        ],
        "type": "object",
        "properties": {
          "deviceCode": {
            "minLength": 1,
            "type": "string"
          },
          "userCode": {
            "minLength": 1,
            "type": "string"
          },
          "verificationUrl": {
            "minLength": 1,
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EnvironmentVariableItem": {
        "required": [
          "channelId",
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EventAttributes": {
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName"
        ],
        "type": "string"
      },
      "EventInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/EventAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/Type"
          }
        },
        "additionalProperties": false
      },
      "Exception": {
        "type": "object",
        "properties": {
          "targetSite": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "innerException": {
            "$ref": "#/components/schemas/Exception"
          },
          "helpLink": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "hResult": {
            "type": "integer",
            "format": "int32"
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FieldAttributes": {
        "enum": [
          "PrivateScope",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "FieldAccessMask",
          "Static",
          "InitOnly",
          "Literal",
          "NotSerialized",
          "HasFieldRVA",
          "SpecialName",
          "RTSpecialName",
          "HasFieldMarshal",
          "PinvokeImpl",
          "HasDefault",
          "ReservedMask"
        ],
        "type": "string"
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/FieldAttributes"
          },
          "fieldType": {
            "$ref": "#/components/schemas/Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/RuntimeFieldHandle"
          }
        },
        "additionalProperties": false
      },
      "GenericParameterAttributes": {
        "enum": [
          "None",
          "Covariant",
          "Contravariant",
          "VarianceMask",
          "ReferenceTypeConstraint",
          "NotNullableValueTypeConstraint",
          "DefaultConstructorConstraint",
          "SpecialConstraintMask"
        ],
        "type": "string"
      },
      "GetChannelLogsVm": {
        "required": [
          "logs"
        ],
        "type": "object",
        "properties": {
          "logs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "GuidNullableField": {
        "type": "string",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HealthCheckResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": { }
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "status": {
            "$ref": "#/components/schemas/HealthStatus"
          }
        },
        "additionalProperties": false
      },
      "HealthStatus": {
        "enum": [
          "Unhealthy",
          "Degraded",
          "Healthy"
        ],
        "type": "string"
      },
      "ICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "LayoutKind": {
        "enum": [
          "Sequential",
          "Explicit",
          "Auto"
        ],
        "type": "string"
      },
      "MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberTypes": {
        "enum": [
          "Constructor",
          "Event",
          "Field",
          "Method",
          "Property",
          "TypeInfo",
          "Custom",
          "NestedType",
          "All"
        ],
        "type": "string"
      },
      "MethodAttributes": {
        "enum": [
          "ReuseSlot",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "MemberAccessMask",
          "UnmanagedExport",
          "Static",
          "Final",
          "Virtual",
          "HideBySig",
          "NewSlot",
          "CheckAccessOnOverride",
          "Abstract",
          "SpecialName",
          "RTSpecialName",
          "PinvokeImpl",
          "HasSecurity",
          "RequireSecObject",
          "ReservedMask"
        ],
        "type": "string"
      },
      "MethodBase": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MethodImplAttributes": {
        "enum": [
          "IL",
          "Native",
          "OPTIL",
          "Runtime",
          "Unmanaged",
          "NoInlining",
          "ForwardRef",
          "Synchronized",
          "NoOptimization",
          "PreserveSig",
          "AggressiveInlining",
          "AggressiveOptimization",
          "InternalCall",
          "MaxMethodImplVal"
        ],
        "type": "string"
      },
      "MethodInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "returnParameter": {
            "$ref": "#/components/schemas/ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/ICustomAttributeProvider"
          }
        },
        "additionalProperties": false
      },
      "Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "scopeName": {
            "type": "string",
            "readOnly": true
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ParameterAttributes": {
        "enum": [
          "None",
          "In",
          "Out",
          "Lcid",
          "Retval",
          "Optional",
          "HasDefault",
          "HasFieldMarshal",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "type": "string"
      },
      "ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/Type"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "rawDefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PatchChannelCommand": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "format": "uuid"
          },
          "environmentVariables": {
            "$ref": "#/components/schemas/UpdateEnvironmentVariableDtoListField"
          },
          "name": {
            "$ref": "#/components/schemas/StringField"
          },
          "domain": {
            "$ref": "#/components/schemas/StringField"
          },
          "revisionSelectionStrategy": {
            "$ref": "#/components/schemas/ChannelRevisionSelectionStrategyField"
          },
          "rangeRule": {
            "$ref": "#/components/schemas/StringField"
          },
          "activeRevisionId": {
            "$ref": "#/components/schemas/GuidNullableField"
          }
        },
        "additionalProperties": false
      },
      "PersonalAccessTokenItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PersonalAccessTokenItemPage": {
        "required": [
          "isLastPage",
          "items",
          "pageIndex",
          "pageSize",
          "totalItems"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonalAccessTokenItem"
            }
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PersonalAccessTokenValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PropertyAttributes": {
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName",
          "HasDefault",
          "Reserved2",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "type": "string"
      },
      "PropertyInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "propertyType": {
            "$ref": "#/components/schemas/Type"
          },
          "attributes": {
            "$ref": "#/components/schemas/PropertyAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenCommand": {
        "required": [
          "refreshToken",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegisterRevisionCommand": {
        "required": [
          "appStorageId",
          "revisionNumber"
        ],
        "type": "object",
        "properties": {
          "appStorageId": {
            "minLength": 1,
            "type": "string"
          },
          "revisionNumber": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RevisionComponentDto": {
        "required": [
          "id",
          "name",
          "source"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "source": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "route": {
            "type": "string",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RevisionItem": {
        "required": [
          "appId",
          "components",
          "id",
          "revisionNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "appId": {
            "type": "string",
            "format": "uuid"
          },
          "revisionNumber": {
            "minLength": 1,
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RevisionComponentDto"
            },
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RevisionItemPage": {
        "required": [
          "isLastPage",
          "items",
          "pageIndex",
          "pageSize",
          "totalItems"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RevisionItem"
            }
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "SecurityRuleSet": {
        "enum": [
          "None",
          "Level1",
          "Level2"
        ],
        "type": "string"
      },
      "StringField": {
        "type": "string",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StringPage": {
        "required": [
          "isLastPage",
          "items",
          "pageIndex",
          "pageSize",
          "totalItems"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "typeId": {
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/LayoutKind"
          }
        },
        "additionalProperties": false
      },
      "TokenInfo": {
        "required": [
          "expiration",
          "refreshToken",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Type": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TypeAttributes": {
        "enum": [
          "NotPublic",
          "Public",
          "NestedPublic",
          "NestedPrivate",
          "NestedFamily",
          "NestedAssembly",
          "NestedFamANDAssem",
          "NestedFamORAssem",
          "SequentialLayout",
          "ExplicitLayout",
          "LayoutMask",
          "Interface",
          "Abstract",
          "Sealed",
          "SpecialName",
          "RTSpecialName",
          "Import",
          "Serializable",
          "WindowsRuntime",
          "UnicodeClass",
          "AutoClass",
          "CustomFormatClass",
          "HasSecurity",
          "ReservedMask",
          "BeforeFieldInit",
          "CustomFormatMask"
        ],
        "type": "string"
      },
      "TypeInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "readOnly": true
          },
          "declaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInfo"
            },
            "readOnly": true
          },
          "declaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            },
            "readOnly": true
          },
          "declaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInfo"
            },
            "readOnly": true
          },
          "declaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "readOnly": true
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "readOnly": true
          },
          "declaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyInfo"
            },
            "readOnly": true
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAppCommand": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateChannelCommand": {
        "required": [
          "id",
          "name",
          "revisionSelectionStrategy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "revisionSelectionStrategy": {
            "$ref": "#/components/schemas/ChannelRevisionSelectionStrategy"
          },
          "rangeRule": {
            "type": "string",
            "nullable": true
          },
          "activeRevisionId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateDesiredStatusCommand": {
        "required": [
          "channelId",
          "desiredStatus"
        ],
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "format": "uuid"
          },
          "desiredStatus": {
            "$ref": "#/components/schemas/DesiredStatus"
          }
        },
        "additionalProperties": false
      },
      "UpdateEnvironmentVariableDto": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateEnvironmentVariableDtoListField": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UpdateEnvironmentVariableDto"
        },
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateEnvironmentVariableDto"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}