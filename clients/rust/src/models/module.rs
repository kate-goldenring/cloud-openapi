/*
 * Fermyon.Cloud.Web
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Module {
    #[serde(rename = "assembly", skip_serializing_if = "Option::is_none")]
    pub assembly: Option<Box<crate::models::Assembly>>,
    #[serde(rename = "fullyQualifiedName", skip_serializing_if = "Option::is_none")]
    pub fully_qualified_name: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "mdStreamVersion", skip_serializing_if = "Option::is_none")]
    pub md_stream_version: Option<i32>,
    #[serde(rename = "moduleVersionId", skip_serializing_if = "Option::is_none")]
    pub module_version_id: Option<uuid::Uuid>,
    #[serde(rename = "scopeName", skip_serializing_if = "Option::is_none")]
    pub scope_name: Option<String>,
    #[serde(rename = "moduleHandle", skip_serializing_if = "Option::is_none")]
    pub module_handle: Option<Box<crate::models::ModuleHandle>>,
    #[serde(rename = "customAttributes", skip_serializing_if = "Option::is_none")]
    pub custom_attributes: Option<Vec<crate::models::CustomAttributeData>>,
    #[serde(rename = "metadataToken", skip_serializing_if = "Option::is_none")]
    pub metadata_token: Option<i32>,
}

impl Module {
    pub fn new() -> Module {
        Module {
            assembly: None,
            fully_qualified_name: None,
            name: None,
            md_stream_version: None,
            module_version_id: None,
            scope_name: None,
            module_handle: None,
            custom_attributes: None,
            metadata_token: None,
        }
    }
}


