/*
 * Fermyon Cloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LockedManifest {
    #[serde(rename = "spinLockVersion", skip_serializing_if = "Option::is_none")]
    pub spin_lock_version: Option<i32>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<crate::models::LockedManifestMetadata>>,
    #[serde(rename = "variables", skip_serializing_if = "Option::is_none")]
    pub variables: Option<::std::collections::HashMap<String, crate::models::Variable>>,
    #[serde(rename = "triggers", skip_serializing_if = "Option::is_none")]
    pub triggers: Option<Vec<crate::models::LockedTrigger>>,
    #[serde(rename = "components", skip_serializing_if = "Option::is_none")]
    pub components: Option<Vec<crate::models::LockedComponent>>,
}

impl LockedManifest {
    pub fn new() -> LockedManifest {
        LockedManifest {
            spin_lock_version: None,
            metadata: None,
            variables: None,
            triggers: None,
            components: None,
        }
    }
}


